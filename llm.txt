# Kafka Docker Playground Documentation

This repository contains the documentation for the Kafka Docker Playground project, a comprehensive testing and learning platform for Apache Kafka and Confluent Platform.

## Project Overview

The Kafka Docker Playground is a collection of Docker-based examples and tools for:
- Testing Kafka connectors (170+ on-premises, 70+ fully-managed)
- Learning Kafka and Confluent Platform features
- Building reproduction models for debugging
- Automated testing and CI/CD workflows

## Documentation Structure

### Core Documentation Files
- `introduction.md` - Main project introduction and features overview
- `how-to-use.md` - Getting started guide and usage instructions
- `how-it-works.md` - Technical details about playground architecture
- `content.md` - Index of all available examples and connectors
- `cli.md` - Complete CLI command reference
- `reusables.md` - Guide for building custom examples and reproduction models
- `academy.md` - Educational content with real-world use cases
- `changelog.md` - Project changelog with monthly updates

### CLI Command Documentation
The project includes extensive CLI documentation with individual pages for each command:
- `playground run` - Execute examples
- `playground connector` - Manage Kafka connectors
- `playground topic` - Kafka topic operations
- `playground container` - Docker container management
- `playground debug` - Debugging tools and utilities
- `playground repro` - Reproduction model creation and management
- `playground schema` - Schema registry operations
- `playground ec2` - AWS EC2 instance management

### Key Features Documented
1. **Connector Testing**: 240+ connector examples (on-prem + cloud)
2. **Security Examples**: SASL, RBAC, SSL, mTLS configurations
3. **Cloud Integration**: Confluent Cloud examples and cost management
4. **Multi-DC Scenarios**: Cluster Linking, Replicator, MirrorMaker 2
5. **Version Management**: Support for any CP/connector versions
6. **Debugging Tools**: Remote debugging, heap dumps, thread dumps, TCP analysis
7. **Reproduction Models**: Framework for creating bug reproduction cases

### Build System
- Uses Docsify for documentation generation
- Markdown-based content with special formatting
- Automated template generation for CLI commands
- Badge system for tracking project metrics

### File Naming Conventions
- `playground [command] [subcommand].md` - CLI command documentation
- Template files use `-template.md` suffix
- Main documentation uses descriptive names

## Target Audience
- Kafka developers and operators
- DevOps engineers working with streaming platforms
- Support engineers creating reproduction models
- Students learning Kafka ecosystem

## Key Technologies
- Apache Kafka / Confluent Platform
- Docker and Docker Compose
- Various cloud platforms (AWS, GCP, Azure)
- 240+ different Kafka connectors
- Schema Registry and serialization formats

## Documentation Style
- Emoji-based categorization and visual hierarchy
- Interactive examples with copy-paste commands
- Step-by-step tutorials with validation points
- Real-world scenarios and troubleshooting guides
- Comprehensive CLI reference with examples

This documentation serves as both a learning resource and operational reference for the Kafka Docker Playground ecosystem.